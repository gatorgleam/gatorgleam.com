---
const { variant = 'primary', as = 'a', href, class: cls = '', ...props } = Astro.props;
const base = 'inline-flex items-center justify-center rounded-2xl px-5 py-3 font-medium transition focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 shadow-md';
const variantOptions = ['primary', 'secondary', 'ghost'] as const;
type Variant = typeof variantOptions[number];
const variants: Record<Variant, string> = {
  primary:  'bg-brand-teal text-white hover:opacity-90 focus-visible:ring-brand-yellow',
  secondary:'bg-white text-neutral-950 border border-neutral-200 hover:bg-neutral-100 focus-visible:ring-brand-teal',
  ghost:    'text-neutral-950 hover:bg-neutral-100'
};
const chosenVariant: Variant = (variantOptions as readonly string[]).includes(variant as string)
  ? (variant as Variant)
  : 'primary';
const Comp = as;
---
---
<Comp href={href} class={`${base} ${variants[chosenVariant]} ${cls}`} {...props}>
  <slot />
</Comp>


